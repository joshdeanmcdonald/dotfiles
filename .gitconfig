[user]
	name = Martin Tzvetanov Grigorov
	email = mgrigorov@apache.org
[alias]
	cherry-pick = cherry-pick -x 
	st = status -s -b
	ci = commit -v
	co = checkout
	br = branch
	w = whatchanged
	undo = "checkout --"
	l = log --oneline --decorate --graph
	ll = log --pretty=medium --decorate --graph --stat
	hist = log --pretty=format:\"%C(yellow bold)%h%Creset %C(red)%ad%Creset | %s%C(green bold)%d%Creset %C(blue)[%an]%Creset\" --graph --date=short
	fixup = commit --amend -c HEAD
	timeline = log --graph --branches --pretty=oneline --decorate
	untracked-files = ls-files -o --exclude-standard
	ignored-files = ls-files --others -i --exclude-standard
	modified-files = ls-files -m
	unstage = reset HEAD
	bl = blame -C
	new = ls-files --others --exclude-standard
	today = log --stat --since='1 Day Ago' --graph --pretty=oneline --abbrev-commit --date=relative
	newauthor = commit --amend --reset-author -C HEAD
	# add all changed (but not new) files to stage (index):
    au = add -u
    # prune all tracking local branches that have been removed from remote:
    prune-all = !git remote | xargs -n 1 git remote prune
    # show list of contributors in descending order by number of commits
    rank = shortlog -sn --no-merges
    # given a string for an author, try to figure out full name and email:
    whois = "!sh -c 'git log -i -1 --pretty=\"format:%an <%ae>\n\" --author=\"$1\"' -"
    # given any git object, try to show it briefly
    whatis = show -s --pretty='tformat:%h (%s, %ad)' --date=short
    # Search for a given string in all patches and print commit messages
    # example: search for any commit that adds or removes string "foobar"
    #     git searchcommits foobar
    # example: search commits for string "foobar" in directory src/lib
    #     git searchcommits foobar src/lib
    # example: search commits for "foobar", print full diff of commit with 1 line context
    #     git searchcommits foobar --pickaxe-all -U1 src/lib
    searchcommits = "!f() { query=\"$1\"; shift; git log -S\"$query\" \"$@\"; }; f \"$@\""
    pom = push origin master
	out = log -p origin..@{0}
	up = pull --rebase
[color]
	branch = auto
	diff = auto
	interactive = auto
	status = auto
	ui = auto
	pager = true
[color "branch"]
        current = yellow reverse
        local = yellow
        remote = green

[color "diff"]
        meta = yellow bold
        frag = magenta bold
        old = red bold
        new = green bold

[color "status"]
        added = yellow
        changed = green
        untracked = cyan	
[core]
	editor = vim
	excludesfile = /home/martin/.gitignore
	whitespace=fix,-indent-with-non-tab,trailing-space,cr-at-eol

[pager]
	status = true
	show-branch = true
[format]
	numbered = auto
[apply]
	whitespace = fix
[github]
	user = martin-g
[push]
	default = tracking
[help]
	autocorrect = 1
[diff]
	renames = copies

